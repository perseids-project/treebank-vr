{"version":3,"sources":["components/Home/index.js","components/Graph/index.js","components/App/App.js","components/App/index.js","serviceWorker.js","index.js","components/App/App.module.css","components/Home/Home.js","components/Home/click-treebank.png","components/Home/find-id.png","components/Home/copy-link.png","components/Home/explore.png","components/Graph/Graph.js","components/Graph/convert.js"],"names":["Home","Graph","innerRouter","basename","process","className","exact","to","role","styles","main","path","component","github","report","doi","App","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message","module","exports","props","state","url","chunk","redirect","handleUrlChange","bind","handleChunkChange","handleKeyDown","value","target","this","setState","key","escapedUrl","Buffer","from","toString","id","type","onChange","onKeyDown","placeholder","aria-label","aria-describedby","href","src","clickTreebank","alt","findId","copyLink","explore","Component","nodeThreeObject","node","sprite","SpriteText","val","color","textHeight","isLoaded","data","params","fetch","response","text","xml","convert","normalize","graphData","nodeAutoColorBy","dagMode","dagLevelDistance","sentence","DOMParser","parseFromString","json","nodes","group","links","sentences","evaluate","XPathResult","UNORDERED_NODE_ITERATOR_TYPE","iterateNext","getAttribute","words","word","wordId","head","push","source"],"mappings":"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","file":"static/js/main.a4ac6044.chunk.js","sourcesContent":["import Home from './Home';\n\nexport default Home;\n","import Graph from './Graph';\n\nexport default Graph;\n","import React, { StrictMode } from 'react';\nimport { PerseidsHeader, PerseidsFooter } from 'perseids-react-components';\nimport {\n  BrowserRouter as Router, Route, Switch, NavLink,\n} from 'react-router-dom';\n\nimport styles from './App.module.css';\n\nimport Home from '../Home';\nimport Graph from '../Graph';\n\nconst innerRouter = () => (\n  <StrictMode>\n    <Router basename={process.env.PUBLIC_URL}>\n      <PerseidsHeader>\n        Treebank Virtual Reality\n\n        <ul className=\"navbar-nav ml-auto\">\n          <li className=\"nav-item\">\n            <NavLink className=\"nav-link\" exact to=\"/\">\n              Home\n            </NavLink>\n          </li>\n        </ul>\n      </PerseidsHeader>\n      <main role=\"main\" className={styles.main}>\n        <div className=\"container text-center\">\n          <Switch>\n            <Route exact path=\"/\" component={Home} />\n          </Switch>\n        </div>\n      </main>\n      <PerseidsFooter\n        github=\"https://github.com/perseids-project/treebank-vr\"\n        report=\"https://github.com/perseids-project/treebank-vr/issues\"\n        doi=\"10.5281/zenodo.3991082\"\n      />\n    </Router>\n  </StrictMode>\n);\n\nconst App = () => (\n  <Router basename={process.env.PUBLIC_URL}>\n    <Switch>\n      <Route path=\"/:url/:chunk\" component={Graph} />\n      <Route path=\"/\" component={innerRouter} />\n    </Switch>\n  </Router>\n);\n\nexport default App;\n","import App from './App';\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport 'perseids-react-components/build/css/index.css';\nimport './index.css';\nimport App from './components/App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"main\":\"App_main__w13HL\"};","import React, { Component } from 'react';\n\nimport clickTreebank from './click-treebank.png';\nimport findId from './find-id.png';\nimport copyLink from './copy-link.png';\nimport explore from './explore.png';\n\nclass Home extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      url: '',\n      chunk: '',\n      redirect: false,\n    };\n\n    this.handleUrlChange = this.handleUrlChange.bind(this);\n    this.handleChunkChange = this.handleChunkChange.bind(this);\n    this.handleKeyDown = this.handleKeyDown.bind(this);\n  }\n\n  handleUrlChange({ target: { value } }) {\n    this.setState({\n      url: value,\n    });\n  }\n\n  handleChunkChange({ target: { value } }) {\n    this.setState({\n      chunk: value,\n    });\n  }\n\n  handleKeyDown({ key }) {\n    const { url, chunk } = this.state;\n\n    if (key === 'Enter' && url !== '' && chunk !== '') {\n      this.setState({\n        redirect: true,\n      });\n    }\n  }\n\n  render() {\n    const { url, chunk, redirect } = this.state;\n    const escapedUrl = Buffer.from(url).toString('base64');\n\n    if (redirect) {\n      // eslint-disable-next-line no-undef\n      window.location = `/${escapedUrl}/${chunk}`;\n\n      return (\n        <div>\n          Redirecting...\n        </div>\n      );\n    }\n\n    return (\n      <>\n        <header>\n          <div className=\"row pt-4\">\n            <div className=\"col\">\n              <h1 className=\"h3\">\n                Virtual Reality Treebank Explorer\n              </h1>\n              <h2 className=\"h6\">\n                Enter the URL for a treebank XML document and a sentence ID:\n              </h2>\n            </div>\n          </div>\n        </header>\n        <div className=\"row pt-2 pb-2\">\n          <div className=\"col-8 offset-lg-1 pr-0\">\n            <div className=\"input-group input-group-lg\">\n              <div className=\"input-group-prepend\">\n                <span className=\"input-group-text\" id=\"url-input-group\">URL:</span>\n              </div>\n              <input className=\"form-control\" type=\"text\" value={url} onChange={this.handleUrlChange} onKeyDown={this.handleKeyDown} placeholder=\"URL ...\" aria-label=\"URL\" aria-describedby=\"url-input-group\" />\n            </div>\n          </div>\n          <div className=\"col-4 col-lg-2 pl-1\">\n            <div className=\"input-group input-group-lg\">\n              <div className=\"input-group-prepend\">\n                <span className=\"input-group-text\" id=\"id-input-group\">ID:</span>\n              </div>\n              <input className=\"form-control\" type=\"text\" value={chunk} onChange={this.handleChunkChange} onKeyDown={this.handleKeyDown} placeholder=\"ID ...\" aria-label=\"ID\" aria-describedby=\"id-input-group\" />\n            </div>\n          </div>\n        </div>\n        <div className=\"row\">\n          <div className=\"col col-lg-10 offset-lg-1\">\n            <a className=\"btn btn-block btn-primary\" href={`/${escapedUrl}/${chunk}`}>\n              Explore\n            </a>\n          </div>\n        </div>\n        <hr />\n        <div className=\"row pt-2\">\n          <div className=\"col\">\n            <h3 className=\"h4\">\n              Examples\n            </h3>\n          </div>\n        </div>\n        <div className=\"row pt-2\">\n          <div className=\"col-sm-6\">\n            <dl>\n              <dt className=\"pb-1\">\n                Herodotus,\n                {' '}\n                <em>\n                  The Histories\n                </em>\n              </dt>\n              <dd>\n                <a href=\"/aHR0cHM6Ly9wZXJzZWlkcy1wdWJsaWNhdGlvbnMuZ2l0aHViLmlvL2dvcm1hbi10cmVlcy94bWwvaGR0LTEtMS0xOS1idTMueG1s/1\">\n                  1.1-1.19 / 1\n                </a>\n              </dd>\n              <dd>\n                <a href=\"/aHR0cHM6Ly9wZXJzZWlkcy1wdWJsaWNhdGlvbnMuZ2l0aHViLmlvL2dvcm1hbi10cmVlcy94bWwvaGR0LTEtMjAtMzktYnUyLnhtbA==/3\">\n                  1.20-1.39 / 3\n                </a>\n              </dd>\n              <dd>\n                <a href=\"/aHR0cHM6Ly9wZXJzZWlkcy1wdWJsaWNhdGlvbnMuZ2l0aHViLmlvL2dvcm1hbi10cmVlcy94bWwvaGR0LTEtNDAtNTktYnUyLnhtbA==/2\">\n                  1.40-1.59 / 2\n                </a>\n              </dd>\n              <dt className=\"pt-1 pb-1\">\n                Sophocles,\n                {' '}\n                <em>\n                  Antigone\n                </em>\n              </dt>\n              <dd>\n                <a href=\"/aHR0cHM6Ly9wZXJzZWlkcy1wdWJsaWNhdGlvbnMuZ2l0aHViLmlvL2RhcGhuZS10cmVlcy94bWwvdGxnMDAxMS90bGcwMDIvdGxnMDAxMS50bGcwMDIuZGFwaG5lX3RiLWdyYzEueG1s/8\">\n                  1-1353 / 8\n                </a>\n              </dd>\n              <dt className=\"pt-1 pb-1\">\n                Lucian,\n                {' '}\n                <em>\n                  A True Story\n                </em>\n              </dt>\n              <dd>\n                <a href=\"/aHR0cHM6Ly9wZXJzZWlkcy1wdWJsaWNhdGlvbnMuZ2l0aHViLmlvL2hhcnJpbmd0b24tdHJlZXMveG1sL0NJVEVfVFJFRUJBTktfWE1ML3BlcnNldXMvZ3JjdGIvNTI3OS9ncmN0Yi41Mjc5LjEudGIueG1s/1\">\n                  1-4 / 1\n                </a>\n              </dd>\n              <dd>\n                <a href=\"/aHR0cHM6Ly9wZXJzZWlkcy1wdWJsaWNhdGlvbnMuZ2l0aHViLmlvL2hhcnJpbmd0b24tdHJlZXMveG1sL0NJVEVfVFJFRUJBTktfWE1ML3BlcnNldXMvZ3JjdGIvNTI4MC9ncmN0Yi41MjgwLjEudGIueG1s/127\">\n                  5-47 / 127\n                </a>\n              </dd>\n            </dl>\n          </div>\n          <div className=\"col-sm-6\">\n            <dl>\n              <dt className=\"pb-1\">\n                C. Iulius Caesar,\n                {' '}\n                <em>\n                  Gallic War\n                </em>\n              </dt>\n              <dd>\n                <a href=\"/aHR0cHM6Ly9wZXJzZWlkcy1wdWJsaWNhdGlvbnMuZ2l0aHViLmlvL2hhcnJpbmd0b24tdHJlZXMveG1sL0NJVEVfVFJFRUJBTktfWE1ML3BlcnNldXMvbGF0dGIvNzIyOS9sYXR0Yi43MjI5LjEudGIueG1s/1\">\n                  1.1-1.10 / 1\n                </a>\n              </dd>\n              <dd>\n                <a href=\"/aHR0cHM6Ly9wZXJzZWlkcy1wdWJsaWNhdGlvbnMuZ2l0aHViLmlvL2hhcnJpbmd0b24tdHJlZXMveG1sL0NJVEVfVFJFRUJBTktfWE1ML3BlcnNldXMvbGF0dGIvNDM2Mi9sYXR0Yi40MzYyLjEudGIueG1s/15\">\n                  4.24-4.36 / 15\n                </a>\n              </dd>\n              <dd>\n                <a href=\"/aHR0cHM6Ly9wZXJzZWlkcy1wdWJsaWNhdGlvbnMuZ2l0aHViLmlvL2hhcnJpbmd0b24tdHJlZXMveG1sL0NJVEVfVFJFRUJBTktfWE1ML3BlcnNldXMvbGF0dGIvNDM1MC9sYXR0Yi40MzUwLjEudGIueG1s/3\">\n                  5.24-5.48 / 3\n                </a>\n              </dd>\n              <dd>\n                <a href=\"/aHR0cHM6Ly9wZXJzZWlkcy1wdWJsaWNhdGlvbnMuZ2l0aHViLmlvL2hhcnJpbmd0b24tdHJlZXMveG1sL0NJVEVfVFJFRUJBTktfWE1ML3BlcnNldXMvbWlzY3RiLzMyNi9taXNjdGIuMzI2LjEudGIueG1s/12\">\n                  6.13-6.20 / 12\n                </a>\n              </dd>\n              <dt className=\"pt-1 pb-1\">\n                M. Tullius Cicero,\n                {' '}\n                <em>\n                  First Catilinarian\n                </em>\n              </dt>\n              <dd>\n                <a href=\"/aHR0cHM6Ly9wZXJzZWlkcy1wdWJsaWNhdGlvbnMuZ2l0aHViLmlvL2hhcnJpbmd0b24tdHJlZXMveG1sL0NJVEVfVFJFRUJBTktfWE1ML3BlcnNldXMvbGF0dGIvNjM2MS9sYXR0Yi42MzYxLjEudGIueG1s/1\">\n                  1.1-1.10 / 1\n                </a>\n              </dd>\n            </dl>\n          </div>\n        </div>\n        <hr />\n        <div className=\"row pt-2\">\n          <div className=\"col\">\n            <h3 className=\"h4\">\n              Importing a treebank\n            </h3>\n          </div>\n        </div>\n        <div className=\"row pt-2\">\n          <div className=\"col-md-3\">\n            <img src={clickTreebank} className=\"img-fluid border\" alt=\"treebank template page\" />\n            <p className=\"text-left pt-2\">\n              1. Visit a treebank template page and click on a treebank.\n            </p>\n          </div>\n          <div className=\"col-md-3\">\n            <img src={findId} className=\"img-fluid border\" alt=\"treebank template page\" />\n            <p className=\"text-left pt-2\">\n              2. Navigate to the sentence you would like to explore in virtual reality and\n              note the sentence ID.\n            </p>\n          </div>\n          <div className=\"col-md-3\">\n            <img src={copyLink} className=\"img-fluid border\" alt=\"treebank template page\" />\n            <p className=\"text-left pt-2\">\n              3. Scroll to the bottom of the page, right click on the &quot;View XML&quot; link,\n              and copy the link location.\n            </p>\n          </div>\n          <div className=\"col-md-3\">\n            <img src={explore} className=\"img-fluid border\" alt=\"treebank template page\" />\n            <p className=\"text-left pt-2\">\n              4. Paste the link in the &quot;URL&quot; text input and enter the sentence ID in the\n              &quot;ID&quot; input. Click the &quot;Explore&quot; button.\n            </p>\n          </div>\n        </div>\n      </>\n    );\n  }\n}\n\nexport default Home;\n","module.exports = __webpack_public_path__ + \"static/media/click-treebank.fcd98c95.png\";","module.exports = __webpack_public_path__ + \"static/media/find-id.871332fc.png\";","module.exports = __webpack_public_path__ + \"static/media/copy-link.98123df3.png\";","module.exports = __webpack_public_path__ + \"static/media/explore.7e43f3c4.png\";","import React, { Component } from 'react';\nimport { shape, string } from 'prop-types';\nimport { ForceGraphVR } from 'react-force-graph';\nimport SpriteText from 'three-spritetext';\n\nimport convert from './convert';\n\nconst nodeThreeObject = (node) => {\n  const sprite = new SpriteText(node.val);\n  sprite.color = node.color;\n  sprite.textHeight = 8;\n\n  return sprite;\n};\n\nclass Graph extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      error: null,\n      isLoaded: false,\n      data: null,\n    };\n\n    this.url = this.url.bind(this);\n  }\n\n  componentDidMount() {\n    const { match: { params: { chunk } } } = this.props;\n\n    fetch(this.url())\n      .then((response) => response.text())\n      .then((xml) => convert(xml.normalize('NFC'), chunk))\n      .then((data) => {\n        this.setState({\n          isLoaded: true,\n          data,\n        });\n      })\n      .catch((error) => {\n        this.setState({\n          isLoaded: true,\n          error,\n        });\n      });\n  }\n\n  url() {\n    const { match: { params: { url } } } = this.props;\n\n    return Buffer.from(url, 'base64').toString();\n  }\n\n  render() {\n    const { error, isLoaded, data } = this.state;\n\n    if (error) {\n      return (\n        <div>\n          Error:\n          {' '}\n          {error.message}\n        </div>\n      );\n    } if (!isLoaded) {\n      return (\n        <div>\n          Loading...\n        </div>\n      );\n    }\n    return (\n      <ForceGraphVR\n        graphData={data}\n        nodeAutoColorBy=\"group\"\n        dagMode=\"td\"\n        dagLevelDistance={45}\n        nodeThreeObject={nodeThreeObject}\n      />\n    );\n  }\n}\n\nGraph.propTypes = {\n  match: shape({\n    params: shape({\n      url: string.isRequired,\n      chunk: string,\n    }).isRequired,\n  }).isRequired,\n};\n\nexport default Graph;\n","const convert = (text, id) => {\n  const parser = new DOMParser();\n  const xml = parser.parseFromString(text, 'text/xml');\n  const json = { nodes: [{ id: '0', val: '[ROOT]', group: '-' }], links: [] };\n\n  const sentences = xml.evaluate('//sentence', xml, null, XPathResult.UNORDERED_NODE_ITERATOR_TYPE, null);\n\n  let sentence;\n  while (sentence = sentences.iterateNext()) {\n    if (sentence.getAttribute('id') === id) {\n      const words = xml.evaluate('./word', sentence, null, XPathResult.UNORDERED_NODE_ITERATOR_TYPE, null);\n\n      let word;\n      while (word = words.iterateNext()) {\n        const wordId = word.getAttribute('id');\n        const val = word.getAttribute('form');\n        const group = (word.getAttribute('postag') || '-')[0];\n        const head = word.getAttribute('head');\n\n        json.nodes.push({ id: wordId, val, group });\n        json.links.push({ source: head, target: wordId });\n      }\n\n      break;\n    }\n  }\n\n  return json;\n};\n\nexport default convert;\n"],"sourceRoot":""}